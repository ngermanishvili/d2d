generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum UserRole {
  USER
  ADMIN
  COURIER
}

model User {
  id            String     @id @default(cuid())
  name          String?
  number        String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole   @default(USER)
  accounts      Account[]
  shipments     Shipment[] // Back-reference to Shipment
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Billboard {
  id        String   @id @default(uuid())
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shipment {
  id               String   @id @default(uuid())
  name             String
  userId           String
  lastName         String
  phoneNumber      String
  address          String // 
  city             String // 
  brittle          Boolean  @default(false) // New field for the courier to mark true or false
  price            String
  markedByCourier  Boolean  @default(false) // New field for the courier to mark true or false
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  mimgebisName     String
  mimgebisLastname String
  mimgebisNumber   String
  mimgebiQalaqi    String
  mimgebisAddress  String
  User             User     @relation(fields: [userId], references: [id])

  @@index([userId])
}
